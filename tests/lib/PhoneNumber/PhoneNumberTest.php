<?php
namespace PhoneNumber;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-09-11 at 14:34:22.
 */
class PhoneNumberTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PhoneNumber
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PhoneNumber;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers PhoneNumber\PhoneNumber::parse
     * @todo   Implement testParse().
     */
    public function testParse()
    {
        $this->object= PhoneNumber::parse(" + 7 (912 ) 906 48-6 3 , 8912");
        $this->assertEquals("912", $this->object->getCode());
        $this->assertEquals("9064863", $this->object->getLocal());
        
        $this->object= PhoneNumber::parse(" + 7 9--12906 48-6 3 , 8912");
        $this->assertEquals("912", $this->object->getCode());
        $this->assertEquals("9064863", $this->object->getLocal());        

        $this->object= PhoneNumber::parse(" 8 9--12906 48-6 3 , 8912");
        $this->assertEquals("912", $this->object->getCode());
        $this->assertEquals("9064863", $this->object->getLocal());        
        
        $this->object= PhoneNumber::parse(" 8 (3462)55-15- 55");
        $this->assertEquals("3462", $this->object->getCode());
        $this->assertEquals("551555", $this->object->getLocal());        
        
        $this->object= PhoneNumber::parse(" 5515--55");
        $this->assertEquals(null, $this->object->getCode());
        $this->assertEquals("551555", $this->object->getLocal());        
    }

    /**
     * @covers PhoneNumber\PhoneNumber::isLocal
     * @todo   Implement testIsLocal().
     */
    public function testIsLocal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PhoneNumber\PhoneNumber::isMobile
     * @todo   Implement testIsMobile().
     */
    public function testIsMobile()
    {
        $this->object= PhoneNumber::parse(" + 7 (912 ) 906 48-6 3 , 8912");
        $this->assertTrue($this->object->isMobile());
    }

    /**
     * @covers PhoneNumber\PhoneNumber::getCode
     * @todo   Implement testGetCode().
     */
    public function testGetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PhoneNumber\PhoneNumber::setCode
     * @todo   Implement testSetCode().
     */
    public function testSetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PhoneNumber\PhoneNumber::getLocal
     * @todo   Implement testGetLocal().
     */
    public function testGetLocal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PhoneNumber\PhoneNumber::setLocal
     * @todo   Implement testSetLocal().
     */
    public function testSetLocal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PhoneNumber\PhoneNumber::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        $this->object= PhoneNumber::parse(" + 7 (912 ) 906 48-6 3 , 8912");
        $this->assertEquals("8 (912) 906-48-63", $this->object->__toString());

        $this->object= PhoneNumber::parse(" 55- 15 5 -5");
        $this->assertEquals("55-15-55", $this->object->__toString());

        $this->object= PhoneNumber::parse("8 (34 -62) 55- 15 5 -5");
        $this->assertEquals("8 (3462) 55-15-55", $this->object->__toString());
    }
}
